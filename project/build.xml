<project default="jar">
	
  <property name="src" location="../src"/>
  <property name="build" location="../ant-build"/>	
  <property name="stubs" location="../ant-build/stubs"/>	
  <property name="dll" location="../ant-build/dll"/>
	
  <condition property="win_system">
	 <os family="windows"/>
  </condition>	
	
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  	<mkdir dir="${stubs}"/>
  	<mkdir dir="${dll}"/>
  </target>	
	
  <target name="compile_java" depends="init" >
  	
  	<path id="classpath">
  	    <pathelement path="${build}"/>
  	</path>
  	
    <javac debug="true" debuglevel="lines,vars,source" srcdir="${src}" destdir="${build}">
  		<classpath refid="classpath"/>
    </javac>
  	
  </target>
	
  <target name="headers" depends="compile_java">
	
  	<path id="classpath">
  		   <pathelement path="${build}"/>
  	</path>
  	
  	<javah verbose="yes" class="org.minilzo.common.LZOjni"  destdir="${stubs}" force="yes">
  		<classpath refid="classpath"/>
  	</javah>	
  	
  </target>
	
  <target name="compile_c_win32" depends="headers" if="win_system"  >	
	
	<property name="gcc" value="C:/MinGW/bin/gcc.exe"/>
	<property name="parameters" value=" -shared -Wl,--add-stdcall-alias -std=c99 "/>
  	<property name="include" location="../ant-build/stubs/"/>
  	<property name="include_std" location="../c_code/include/"/>
  	<property name="include_jni" location="${java.home}/../include/"/>
	<property name="include_jni_win32" location="${java.home}/../include/win32/"/>
  	<property name="output" location="${dll}/lzojni32.dll"/>
  	<property name="input" location="..\c_code\src\org_minilzo_common_LZOjni.c"/>
  	<property name="input_minilzo" location="..\c_code\src\minilzo.c"/>
  	
	<exec executable="${gcc}" dir="./" output="c_win32.log" >
	    <arg line="${parameters} -I ${include} -I ${include_std} -I ${include_jni} -I ${include_jni_win32} -o ${output} ${input} ${input_minilzo}"/>
	</exec>	
  	
  </target>
	
  <target name="compile_c_win64" depends="headers" if="win_system">	
	
	<property name="gcc64" value="C:/mingw64/bin/gcc.exe"/>
	<property name="parameters" value=" -shared -Wl,--add-stdcall-alias -std=c99 "/>
  	<property name="include" location="../ant-build/stubs/"/>
  	<property name="include_std" location="../c_code/include/"/>
  	<property name="include_jni" location="${java.home}/../include/"/>
	<property name="include_jni_win32" location="${java.home}/../include/win32/"/>
  	<property name="output64" location="${dll}/lzojni64.dll"/>
  	<property name="input" location="..\c_code\src\org_minilzo_common_LZOjni.c"/>
  	<property name="input_minilzo" location="..\c_code\src\minilzo.c"/>
  	
	<exec executable="${gcc64}" dir="./" >
	    <arg line="${parameters} -I ${include} -I ${include_std} -I ${include_jni} -I ${include_jni_win32} -o ${output64} ${input} ${input_minilzo}"/>
	</exec>	
  	
  </target>	
	
	
  <target name="compile" depends="compile_c_win32, compile_c_win64" >
  	
  	
  </target>	
	
	
  <target name="jar" depends="compile">
  	
    <jar destfile="lzojni.jar"
         basedir="."
         includes="**/*.class">
    <manifest>
      <!-- Who is building this jar? -->
      <attribute name="Built-By" value="Julien BOUVIER-VOLAILLE"/>
      <!-- Information about the program itself -->
      <attribute name="Implementation-Vendor" value="JBV"/>
      <attribute name="Implementation-Title" value="LZO algorithm based on lastest MiniLZO libraries"/>
      <attribute name="Implementation-Version" value="1.0.0"/>
      
    </manifest>
 	<fileset dir="${build}" />
    	
    </jar>
  </target>
 	
</project>